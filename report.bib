% Encoding: UTF-8

@InProceedings{gunter1992datatype,
  author    = {Elsa L. Gunter},
  title     = {Why we can't have SML-style datatype Declarations in {HOL}},
  booktitle = {Higher Order Logic Theorem Proving and its Applications, Proceedings of the {IFIP} {TC10/WG10.2} Workshop HOL'92, Leuven, Belgium, 21-24 September 1992},
  year      = {1992},
  pages     = {561--568},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp2.uni-trier.de/rec/bib/conf/tphol/Gunter92},
  crossref  = {tphol1992},
  timestamp = {Thu, 03 Jan 2002 12:10:28 +0100},
}

@inproceedings{BentonH09,
  author    = {Nick Benton and
               Chung{-}Kil Hur},
  title     = {Biorthogonality, step-indexing and compiler correctness},
  booktitle = {Proceeding of the 14th {ACM} {SIGPLAN} international conference on
               Functional programming, {ICFP} 2009},
  pages     = {97--108},
  year      = {2009},
  url       = {http://doi.acm.org/10.1145/1596550.1596567},
  doi       = {10.1145/1596550.1596567},
  editor    = {Graham Hutton and
               Andrew P. Tolmach},
  publisher = {{ACM}},
}

@inproceedings{BerghoferN-TYPES00,author={Stefan Berghofer and Tobias Nipkow},
title={Executing Higher Order Logic},
booktitle={Types for Proofs and Programs (TYPES 2000)},
editor={P. Callaghan and Z. Luo and J. McKinna and R. Pollack},
year=2002,publisher=Springer,series=LNCS,volume=2277,pages="24--40"}

@inproceedings{BoespflugDG11,
  author    = {Mathieu Boespflug and
               Maxime D{\'{e}}n{\`{e}}s and
               Benjamin Gr{\'{e}}goire},
  title     = {Full Reduction at Full Throttle},
  booktitle = {Certified Programs and Proofs},
  pages     = {362--377},
  year      = {2011},
  editor    = {Jean{-}Pierre Jouannaud and
               Zhong Shao},
  title     = {Certified Programs and Proofs},
  series    = {Lecture Notes in Computer Science},
  volume    = {7086},
  publisher = {Springer},
}

@inproceedings{BoyerM02,
  author    = {Robert S. Boyer and
               J. Strother Moore},
  title     = {Single-Threaded Objects in {ACL2}},
  booktitle = {Practical Aspects of Declarative Languages (PADL 2002)},
  pages     = {9--27},
  year      = {2002},
  url       = {https://doi.org/10.1007/3-540-45587-6_3},
  doi       = {10.1007/3-540-45587-6_3},
  editor    = {Shriram Krishnamurthi and
               C. R. Ramakrishnan},
  series    = {Lecture Notes in Computer Science},
  volume    = {2257},
  publisher = {Springer},
}

@inproceedings{Chlipala10,
  author    = {Adam Chlipala},
  title     = {A verified compiler for an impure functional language},
  booktitle = {Proceedings of the 37th {ACM} {SIGPLAN-SIGACT} Symposium on Principles
               of Programming Languages, {POPL} 2010},
  pages     = {93--106},
  year      = {2010},
  url       = {http://doi.acm.org/10.1145/1706299.1706312},
  doi       = {10.1145/1706299.1706312},
  editor    = {Manuel V. Hermenegildo and
               Jens Palsberg},
  publisher = {{ACM}},
}

@techreport{PVS-attachments,
        AUTHOR = {Judy Crow and Sam Owre and John Rushby and N. Shankar and Dave Stringer-Calvert},
        TITLE = {Evaluating, Testing, and Animating {PVS} Specifications},
        MONTH = mar,
        YEAR = 2001,
        INSTITUTION = {Computer Science Laboratory, SRI International},
        ADDRESS = {Menlo Park, CA}
}

@PhdThesis{Flatau,
  author  = {Arthur D. Flatau},
  title   = {A Verified Implementation of an Applicative Language with Dynamic Storage Allocation},
  school  = {University of Texas at Austin},
  year    = {1992},
}

@article{GreveKMMRRSVW08,
  author    = {David A. Greve and
               Matt Kaufmann and
               Panagiotis Manolios and
               J. Strother Moore and
               Sandip Ray and
               Jos{\'{e}}{-}Luis Ruiz{-}Reina and
               Rob Sumners and
               Daron Vroon and
               Matthew Wilding},
  title     = {Efficient execution in an automated reasoning environment},
  journal   = {J. Funct. Program.},
  volume    = {18},
  number    = {1},
  pages     = {15--46},
  year      = {2008},
  url       = {https://doi.org/10.1017/S0956796807006338},
  doi       = {10.1017/S0956796807006338},
  timestamp = {Tue, 06 Jun 2017 22:25:48 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/jfp/GreveKMMRRSVW08},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{Letouzey02,
  author    = {Pierre Letouzey},
  title     = {A New Extraction for Coq},
  booktitle = {Types for Proofs and Programs},
  editor    = {Herman Geuvers and
               Freek Wiedijk},
  pages     = {200--219},
  series    = {Lecture Notes in Computer Science},
  volume    = {2646},
  publisher = {Springer},
  year      = {2003},
}

@inproceedings{Shankar01,
  author    = {Natarajan Shankar},
  title     = {Static Analysis for Safe Destructive Updates in a Functional Language},
  booktitle = {Logic Based Program Synthesis and Transformation (LOPSTR 2001)},
  pages     = {1--24},
  year      = {2001},
  editor    = {Alberto Pettorossi},
  series    = {Lecture Notes in Computer Science},
  volume    = {2372},
  publisher = {Springer},
}

@InProceedings{wenzel1997typeclasses,
  author    = {Wenzel, Markus},
  title     = {Type classes and overloading in higher-order logic},
  booktitle = {Theorem Proving in Higher Order Logics: 10th International Conference, TPHOLs '97 Murray Hill, NJ, USA, August 19--22, 1997 Proceedings},
  year      = {1997},
  editor    = {Gunter, Elsa L. and Felty, Amy},
  pages     = {307--322},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/BFb0028402},
  isbn      = {978-3-540-69526-4},
  url       = {http://dx.doi.org/10.1007/BFb0028402},
}

@InProceedings{haftmann2007typeclasses,
  author    = {Haftmann, Florian and Wenzel, Makarius},
  title     = {Constructive Type Classes in {Isabelle}},
  booktitle = {Types for Proofs and Programs: International Workshop, TYPES 2006, Nottingham, UK, April 18-21, 2006, Revised Selected Papers},
  year      = {2007},
  editor    = {Altenkirch, Thorsten and McBride, Conor},
  pages     = {160--174},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/978-3-540-74464-1_11},
  isbn      = {978-3-540-74464-1},
  url       = {http://dx.doi.org/10.1007/978-3-540-74464-1_11},
}

@InProceedings{haftmann2010codegeneration,
  author    = {Haftmann, Florian and Nipkow, Tobias},
  title     = {Code Generation via Higher-Order Rewrite Systems},
  booktitle = {Functional and Logic Programming: 10th International Symposium, FLOPS 2010, Sendai, Japan, April 19-21, 2010. Proceedings},
  year      = {2010},
  editor    = {Blume, Matthias and Kobayashi, Naoki and Vidal, Germ{\'a}n},
  pages     = {103--117},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/978-3-642-12251-4_9},
  isbn      = {978-3-642-12251-4},
  url       = {http://dx.doi.org/10.1007/978-3-642-12251-4_9},
}

@Article{myreen2014translation,
  author    = {Myreen, Magnus O. and Owens, Scott},
  title     = {Proof-producing translation of higher-order logic into pure and stateful {ML}},
  journal   = {Journal of Functional Programming},
  year      = {2014},
  volume    = {24},
  number    = {2-3},
  pages     = {284-315},
  month     = {005},
  address   = {Cambridge, UK},
  day       = {001},
  doi       = {10.1017/S0956796813000282},
  publisher = {Cambridge University Press},
  url       = {https://www.cambridge.org/core/article/proof-producing-translation-of-higher-order-logic-into-pure-and-stateful-ml/4836EEA7A25F733339A9D23CD6C9F208},
}

@Article{tait1967interpretations,
  author    = {W. W. Tait},
  title     = {Intensional Interpretations of Functionals of Finite Type I},
  journal   = {The Journal of Symbolic Logic},
  year      = {1967},
  volume    = {32},
  number    = {2},
  pages     = {198-212},
  doi       = {10.2307/2271658},
  issn      = {00224812},
  publisher = {Association for Symbolic Logic},
  url       = {http://www.jstor.org/stable/2271658},
}

@Article{hermida2014logical,
  author   = {Claudio Hermida and Uday S. Reddy and Edmund P. Robinson},
  title    = {Logical Relations and Parametricity – A Reynolds Programme for Category Theory and Programming Languages},
  journal  = {Electronic Notes in Theoretical Computer Science},
  year     = {2014},
  volume   = {303},
  pages    = {149 - 180},
  doi      = {http://dx.doi.org/10.1016/j.entcs.2014.02.008},
  issn     = {1571-0661},
  keywords = {Universal algebra, Category Theory, Homomorphisms, Logical Relations, Natural Transformations, Parametric polymorphism, Relational Parametricity, Data abstraction, Information hiding, Definability, Reflexive Graphs, Fibrations, Relation lifting},
  url      = {http://www.sciencedirect.com/science/article/pii/S1571066114000346},
}

@Article{debruijn1972lambda,
  author  = {N. G. de Bruijn},
  title   = {Lambda calculus notation with nameless dummies, a tool for automatic formula manipulation, with application to the Church-Rosser theorem},
  journal = {Indagationes Mathematicae (Proceedings)},
  year    = {1972},
  volume  = {75},
  number  = {5},
  pages   = {381 - 392},
  doi     = {http://dx.doi.org/10.1016/1385-7258(72)90034-0},
  issn    = {1385-7258},
  url     = {http://www.sciencedirect.com/science/article/pii/1385725872900340},
}

@Article{sternagel2015deriving,
  author  = {Christian Sternagel and René Thiemann},
  title   = {Deriving class instances for datatypes},
  journal = {Archive of Formal Proofs},
  year    = {2015},
  month   = mar,
  note    = {\url{http://isa-afp.org/entries/Deriving.shtml}, Formal proof development},
  issn    = {2150-914x},
}

@Book{milner1997definition,
  title     = {The definition of {Standard ML} (revised)},
  publisher = {MIT Press},
  year      = {1997},
  author    = {Milner, Robin and Tofte, Mads and Harper, Robert and MacQueen, David},
}

@InProceedings{kumar2014cakeml,
  author    = {Kumar, Ramana and Myreen, Magnus O. and Norrish, Michael and Owens, Scott},
  title     = {{CakeML}: A Verified Implementation of {ML}},
  booktitle = {Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year      = {2014},
  series    = {POPL '14},
  pages     = {179--191},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2535841},
  doi       = {10.1145/2535838.2535841},
  isbn      = {978-1-4503-2544-8},
  keywords  = {ML, compiler bootstrapping, compiler verification, machine code verification, read-eval-print loop, verified garbage collection., verified parsing, verified type checking},
  location  = {San Diego, California, USA},
  numpages  = {13},
  url       = {http://doi.acm.org/10.1145/2535838.2535841},
}

@InProceedings{mulligan2014lem,
  author    = {Mulligan, Dominic P. and Owens, Scott and Gray, Kathryn E. and Ridge, Tom and Sewell, Peter},
  title     = {Lem: Reusable Engineering of Real-world Semantics},
  booktitle = {Proceedings of the 19th ACM SIGPLAN International Conference on Functional Programming},
  year      = {2014},
  series    = {ICFP '14},
  pages     = {175--188},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2628143},
  doi       = {10.1145/2628136.2628143},
  isbn      = {978-1-4503-2873-9},
  keywords  = {lem, proof assistants, real-world semantics, specification languages},
  location  = {Gothenburg, Sweden},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/2628136.2628143},
}

@Article{urban2013nominal,
  author  = {Christian Urban and Stefan Berghofer and Cezary Kaliszyk},
  title   = {Nominal 2},
  journal = {Archive of Formal Proofs},
  year    = {2013},
  month   = feb,
  note    = {\url{http://isa-afp.org/entries/Nominal2.shtml}, Formal proof development},
  issn    = {2150-914x},
}

@Article{urban2008nominal,
  author   = {Urban, Christian},
  title    = {Nominal Techniques in {Isabelle/HOL}},
  journal  = {Journal of Automated Reasoning},
  year     = {2008},
  volume   = {40},
  number   = {4},
  pages    = {327--356},
  abstract = {This paper describes a formalisation of the lambda-calculus in a HOL-based theorem prover using nominal techniques. Central to the formalisation is an inductive set that is bijective with the alpha-equated lambda-terms. Unlike de-Bruijn indices, however, this inductive set includes names and reasoning about it is very similar to informal reasoning with ``pencil and paper''. To show this we provide a structural induction principle that requires to prove the lambda-case for fresh binders only. Furthermore, we adapt work by Pitts providing a recursion combinator for the inductive set. The main technical novelty of this work is that it is compatible with the axiom of choice (unlike earlier nominal logic work by Pitts et al); thus we were able to implement all results in Isabelle/HOL and use them to formalise the standard proofs for Church-Rosser, strong-normalisation of beta-reduction, the correctness of the type-inference algorithm W, typical proofs from SOS and much more.},
  doi      = {10.1007/s10817-008-9097-2},
  issn     = {1573-0670},
  url      = {http://dx.doi.org/10.1007/s10817-008-9097-2},
}

@Article{krauss2010recursive,
  author   = {Krauss, Alexander},
  title    = {Partial and Nested Recursive Function Definitions in Higher-order Logic},
  journal  = {Journal of Automated Reasoning},
  year     = {2010},
  volume   = {44},
  number   = {4},
  pages    = {303--336},
  abstract = {Based on inductive definitions, we develop a tool that automates the definition of partial recursive functions in higher-order logic (HOL) and provides appropriate proof rules for reasoning about them. Termination is modeled by an inductive domain predicate which follows the structure of the recursion. Since a partial induction rule is available immediately, partial correctness properties can be proved before termination is established. It turns out that this modularity also facilitates termination arguments for total functions, in particular for nested recursions. Our tool is implemented as a definitional package extending Isabelle/HOL. Various extensions provide convenience to the user: pattern matching, default values, tail recursion, mutual recursion and currying.},
  doi      = {10.1007/s10817-009-9157-2},
  issn     = {1573-0670},
  url      = {http://dx.doi.org/10.1007/s10817-009-9157-2},
}

@PhdThesis{slind1999terminating,
  author  = {Slind, Konrad},
  title   = {Reasoning about Terminating Functional Programs},
  school  = {Technische Universität München},
  year    = {1999},
  url     = {http://nbn-resolving.de/urn/resolver.pl?urn:nbn:de:bvb:91-diss1999111516455},
}

@Book{peytonjones1987implementation,
  title     = {The Implementation of Functional Programming Languages},
  publisher = {Prentice-Hall, Inc.},
  year      = {1987},
  author    = {Peyton Jones, Simon L.},
  address   = {Upper Saddle River, NJ, USA},
  isbn      = {013453333X},
}

@TechReport{schmidt1988unification,
  author      = {Manfred Schmidt-Schau{\ss} and J\"org Siekmann},
  title       = {Unification Algebras: An Axiomatic Approach to Unification, Equation Solving and Constraint Solving},
  institution = {FB Informatik, Universit\"at Kaiserslautern},
  year        = {1988},
  number      = {SEKI-report SR-88-09},
  url         = {http://www.ki.informatik.uni-frankfurt.de/papers/schauss/unif-algebr.pdf},
}

@Book{williams1991instantiation,
  title     = {Instantiation Theory},
  publisher = {Springer-Verlag},
  year      = {1991},
  author    = {James G. Williams},
  doi       = {10.1007/bfb0031932},
  url       = {https://doi.org/10.1007%2Fbfb0031932},
}

@Article{landin1964mechanical,
  author    = {P. J. Landin},
  title     = {The Mechanical Evaluation of Expressions},
  journal   = {The Computer Journal},
  year      = {1964},
  volume    = {6},
  number    = {4},
  pages     = {308--320},
  month     = {jan},
  doi       = {10.1093/comjnl/6.4.308},
  publisher = {Oxford University Press ({OUP})},
}

@InCollection{turner2013history,
  author    = {D. A. Turner},
  title     = {Some History of Functional Programming Languages},
  booktitle = {Lecture Notes in Computer Science},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  pages     = {1--20},
  doi       = {10.1007/978-3-642-40447-4_1},
}

@Manual{ballarin2018locales,
  title  = {Tutorial to Locales and Locale Interpretation},
  author = {Ballarin, Clemens},
  year   = {2018},
  url    = {https://isabelle.in.tum.de/dist/Isabelle2018/doc/locales.pdf},
}

@Manual{marlow2010haskell,
  title = {Haskell 2010 Language Report},
  editor = {Marlow, Simon},
  year = {2010},
  url = {https://www.haskell.org/onlinereport/haskell2010/},
}

@InProceedings{blanchette2014datatypes,
  author    = {Jasmin Christian Blanchette and Johannes Hölzl and Andreas Lochbihler and Lorenz Panny and Andrei Popescu and Dmitriy Traytel},
  title     = {Truly Modular (Co)datatypes for {Isabelle/HOL}},
  booktitle = {Interactive Theorem Proving},
  year      = {2014},
  pages     = {93--110},
  publisher = {Springer International Publishing},
  doi       = {10.1007/978-3-319-08970-6_7},
}

@Article{eder1985properties,
  author    = {Elmar Eder},
  title     = {Properties of substitutions and unifications},
  journal   = {Journal of Symbolic Computation},
  year      = {1985},
  volume    = {1},
  number    = {1},
  pages     = {31--46},
  month     = {mar},
  doi       = {10.1016/s0747-7171(85)80027-4},
  publisher = {Elsevier {BV}},
}

@InProceedings{augustsson1985pattern,
  author    = {Lennart Augustsson},
  title     = {Compiling pattern matching},
  booktitle = {Functional Programming Languages and Computer Architecture},
  year      = {1985},
  pages     = {368--381},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/3-540-15975-4_48},
}

@Conference{anand2017certicoq,
  author    = {Anand, Abhishek and Appel, Andrew W and Morrisett, Greg and Paraskevopoulou, Zoe and Pollack, Randy and B{\'e}langer, Olivier Savary and Sozeau, Matthieu and Weaver, Matthew},
  title     = {{CertiCoq}: A verified compiler for {Coq}},
  booktitle = {CoqPL'17: The Third International Workshop on Coq for Programming Languages},
  year      = {2017},
  url       = {http://www.cs.princeton.edu/~appel/papers/certicoq-coqpl.pdf},
}

@Conference{forster2016extraction,
  author    = {Yannick Forster and Fabian Kunze},
  title     = {Verified Extraction from Coq to a Lambda-Calculus},
  booktitle = {The 8th Coq Workshop},
  year      = {2016},
  url       = {http://www.ps.uni-saarland.de/~forster/coq-workshop-16/abstract-coq-ws-16.pdf},
}

@InProceedings{tan2016cakeml,
  author    = {Yong Kiam Tan and Magnus O. Myreen and Ramana Kumar and Anthony Fox and Scott Owens and Michael Norrish},
  title     = {A new verified compiler backend for {CakeML}},
  booktitle = {Proceedings of the 21st {ACM} {SIGPLAN} International Conference on Functional Programming - {ICFP} 2016},
  year      = {2016},
  publisher = {Association for Computing Machinery ({ACM})},
  doi       = {10.1145/2951913.2951924},
}

@Manual{hol2014description,
  title = {The {HOL} System Description},
  year  = {2014},
  url   = {https://hol-theorem-prover.org/},
}

@InProceedings{berghofer2009inductive,
  author    = {Stefan Berghofer and Lukas Bulwahn and Florian Haftmann},
  title     = {Turning Inductive into Equational Specifications},
  booktitle = {Lecture Notes in Computer Science},
  year      = {2009},
  pages     = {131--146},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/978-3-642-03359-9_11},
}

@Article{hall1996classes,
  author    = {Cordelia V. Hall and Kevin Hammond and Simon L. Peyton Jones and Philip L. Wadler},
  title     = {Type classes in Haskell},
  journal   = {{ACM} Transactions on Programming Languages and Systems},
  year      = {1996},
  volume    = {18},
  number    = {2},
  pages     = {109--138},
  month     = {mar},
  doi       = {10.1145/227699.227700},
  publisher = {Association for Computing Machinery ({ACM})},
}

@InProceedings{naraschewski1998record,
  author    = {Wolfgang Naraschewski and Markus Wenzel},
  title     = {Object-oriented verification based on record subtyping in Higher-Order Logic},
  booktitle = {Lecture Notes in Computer Science},
  year      = {1998},
  pages     = {349--366},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/bfb0055146},
}

@InProceedings{krauss2010translation,
  author    = {Alexander Krauss and Andreas Schropp},
  title     = {A Mechanized Translation from Higher-Order Logic to Set Theory},
  booktitle = {Interactive Theorem Proving},
  year      = {2010},
  pages     = {323--338},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/978-3-642-14052-5_23},
}

@Proceedings{tphol1992,
  title     = {Higher Order Logic Theorem Proving and its Applications, Proceedings of the {IFIP} {TC10/WG10.2} Workshop HOL'92, Leuven, Belgium, 21-24 September 1992},
  year      = {1993},
  editor    = {Luc J. M. Claesen and Michael J. C. Gordon},
  volume    = {{A-20}},
  series    = {{IFIP} Transactions},
  publisher = {North-Holland/Elsevier},
  isbn      = {0-444-89880-8},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp2.uni-trier.de/rec/bib/conf/tphol/1992},
  timestamp = {Thu, 03 Jan 2002 12:10:28 +0100},
}

@Article{hupel2017lazycase,
  author  = {Lars Hupel},
  title   = {Lazifying case constants},
  journal = {Archive of Formal Proofs},
  year    = {2017},
  month   = apr,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Lazy_Case.shtml}, Formal proof development},
}

@Article{hupel2017constructor,
  author  = {Lars Hupel},
  title   = {Constructor Functions},
  journal = {Archive of Formal Proofs},
  year    = {2017},
  month   = apr,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Constructor_Funs.shtml}, Formal proof development},
}

@InProceedings{neis2015pilsner,
  author    = {Neis, Georg and Hur, Chung-Kil and Kaiser, Jan-Oliver and McLaughlin, Craig and Dreyer, Derek and Vafeiadis, Viktor},
  title     = {{Pilsner:} A Compositionally Verified Compiler for a Higher-order Imperative Language},
  booktitle = {Proceedings of the 20th ACM SIGPLAN International Conference on Functional Programming},
  year      = {2015},
  series    = {ICFP 2015},
  pages     = {166--178},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2784764},
  doi       = {10.1145/2784731.2784764},
  isbn      = {978-1-4503-3669-7},
  keywords  = {Compositional compiler verification, abstract types, higher-order state, parametric simulations, recursive types, transitivity},
  location  = {Vancouver, BC, Canada},
  numpages  = {13},
  url       = {http://doi.acm.org/10.1145/2784731.2784764},
}

@Article{leroy2009compiler,
  author     = {Leroy, Xavier},
  title      = {Formal Verification of a Realistic Compiler},
  journal    = {Commun. ACM},
  year       = {2009},
  volume     = {52},
  number     = {7},
  pages      = {107--115},
  month      = jul,
  issn       = {0001-0782},
  acmid      = {1538814},
  address    = {New York, NY, USA},
  doi        = {10.1145/1538788.1538814},
  issue_date = {July 2009},
  numpages   = {9},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/1538788.1538814},
}

@Book{nipkow2014semantics,
  title     = {Concrete Semantics},
  publisher = {Springer},
  year      = {2014},
  author    = {Nipkow, Tobias and Klein, Gerwin},
  isbn      = {3319105418},
  date      = {2014-12-15},
  ean       = {9783319105413},
  pagetotal = {298},
  url       = {http://www.concrete-semantics.org/},
}

@InProceedings{owens2016functional,
  author    = {Owens, Scott and Myreen, Magnus O. and Kumar, Ramana and Tan, Yong Kiam},
  title     = {Functional Big-Step Semantics},
  booktitle = {Programming Languages and Systems: 25th European Symposium on Programming, ESOP 2016, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2016, Eindhoven, The Netherlands, April 2--8, 2016, Proceedings},
  year      = {2016},
  editor    = {Thiemann, Peter},
  pages     = {589--615},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {When doing an interactive proof about a piece of software, it is important that the underlying programming language's semantics does not make the proof unnecessarily difficult or unwieldy. Both small-step and big-step semantics are commonly used, and the latter is typically given by an inductively defined relation. In this paper, we consider an alternative: using a recursive function akin to an interpreter for the language. The advantages include a better induction theorem, less duplication, accessibility to ordinary functional programmers, and the ease of doing symbolic simulation in proofs via rewriting. We believe that this style of semantics is well suited for compiler verification, including proofs of divergence preservation. We do not claim the invention of this style of semantics: our contribution here is to clarify its value, and to explain how it supports several language features that might appear to require a relational or small-step approach. We illustrate the technique on a simple imperative language with C-like for-loops and a break statement, and compare it to a variety of other approaches. We also provide ML and lambda-calculus based examples to illustrate its generality.},
  doi       = {10.1007/978-3-662-49498-1_23},
  isbn      = {978-3-662-49498-1},
  url       = {http://dx.doi.org/10.1007/978-3-662-49498-1_23},
}

@InProceedings{fallenstein2015reflection,
  author    = {Benja Fallenstein and Ramana Kumar},
  title     = {Proof-Producing Reflection for {HOL}},
  booktitle = {Interactive Theorem Proving},
  year      = {2015},
  editor    = {Urban, Christian and Zhang, Xingyuan},
  pages     = {170--186},
  publisher = {Springer International Publishing},
  doi       = {10.1007/978-3-319-22102-1_11},
  isbn      = {978-3-319-22102-1},
}

@Article{finn1997partial,
  author    = {Simon Finn and Michael P. Fourman and John Longley},
  title     = {Partial Functions in a Total Setting},
  journal   = {Journal of Automated Reasoning},
  year      = {1997},
  volume    = {18},
  number    = {1},
  pages     = {85--104},
  month     = {Feb},
  issn      = {1573-0670},
  day       = {01},
  doi       = {10.1023/a:1005702928286},
  publisher = {Springer Nature},
  url       = {https://doi.org/10.1023/A:1005702928286},
}

@Article{hupel2017dict,
  author  = {Lars Hupel},
  title   = {Dictionary Construction},
  journal = {Archive of Formal Proofs},
  year    = {2017},
  month   = may,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Dict_Construction.html}, Formal proof development},
}

@PhdThesis{krauss2009fun,
  author  = {Krauss, Alexander},
  title   = {Automating Recursive Definitions and Termination Proofs in Higher-Order Logic},
  school  = {Technische Universität München},
  year    = {2009},
  type    = {Dissertation},
  address = {München},
}

@Article{hindley1969principal,
  author    = {J. Roger Hindley},
  title     = {The Principal Type-Scheme of an Object in Combinatory Logic},
  journal   = {Transactions of the American Mathematical Society},
  year      = {1969},
  volume    = {146},
  pages     = {29},
  month     = {dec},
  doi       = {10.2307/1995158},
  publisher = {{JSTOR}},
}

@Article{milner1978polymorphism,
  author    = {Robin Milner},
  title     = {A theory of type polymorphism in programming},
  journal   = {Journal of Computer and System Sciences},
  year      = {1978},
  volume    = {17},
  number    = {3},
  pages     = {348--375},
  month     = {dec},
  doi       = {10.1016/0022-0000(78)90014-4},
  publisher = {Elsevier {BV}},
}

@Book{jones1994types,
  title     = {Qualified Types: Theory and Practice},
  publisher = {Cambridge University Press},
  year      = {1994},
  author    = {Mark P. Jones},
  isbn      = {9780511663086},
  doi       = {10.1017/cbo9780511663086},
}

@InProceedings{nipkow1991typeclasses,
  author    = {Tobias Nipkow and Gregor Snelting},
  title     = {Type classes and overloading resolution via order-sorted unification},
  booktitle = {Functional Programming Languages and Computer Architecture},
  year      = {1991},
  pages     = {1--14},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/3540543961_1},
}

@Article{nipkow1995reconstruction,
  author    = {Nipkow, Tobias and Prehofer, Christian},
  title     = {Type Reconstruction for Type Classes},
  journal   = {Journal of Functional Programming},
  year      = {1995},
  volume    = {5},
  number    = {2},
  pages     = {201--224},
  doi       = {10.1017/S0956796800001325},
  publisher = {Cambridge University Press},
}

@InProceedings{reynolds1983parametric,
  author    = {John C. Reynolds},
  title     = {Types, Abstraction and Parametric Polymorphism},
  booktitle = {{IFIP} Congress},
  year      = {1983},
  pages     = {513--523},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  biburl    = {https://dblp.org/rec/bib/conf/ifip/Reynolds83},
  timestamp = {Thu, 03 Jan 2002 12:03:25 +0100},
}

@Unpublished{gilcher2017parametricity,
  author = {Jan Gilcher and Andreas Lochbihler and Dmitriy Traytel},
  title  = {Conditional Parametricity in {Isabelle/HOL}},
  note   = {Extended abstract},
  year   = {2017},
  url    = {https://people.inf.ethz.ch/trayteld/papers/itp17poster-cond_param/cond.pdf},
}

@InProceedings{lochbihler2016probabilistic,
  author    = {Andreas Lochbihler},
  title     = {Probabilistic Functions and Cryptographic Oracles in Higher Order Logic},
  booktitle = {Programming Languages and Systems (ESOP 2016)},
  year      = {2016},
  editor    = {Peter Thiemann},
  volume    = {9632},
  series    = {LNCS},
  pages     = {503--531},
  publisher = {Springer},
  doi       = {10.1007/978-3-662-49498-1_20},
}

@Article{sternagel2014show,
  author  = {Christian Sternagel and René Thiemann},
  title   = {Haskell's Show Class in Isabelle/HOL},
  journal = {Archive of Formal Proofs},
  year    = {2014},
  month   = jul,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Show.html}, Formal proof development},
}

@Article{hughes1986dlist,
  author    = {John Hughes},
  title     = {A novel representation of lists and its application to the function {\textquotedblleft}reverse{\textquotedblright}},
  journal   = {Information Processing Letters},
  year      = {1986},
  volume    = {22},
  number    = {3},
  pages     = {141--144},
  month     = {mar},
  doi       = {10.1016/0020-0190(86)90059-1},
  publisher = {Elsevier {BV}},
}

@Article{gordon2010refinement,
  author    = {Gordon, Andrew D. and Fournet, Cédric},
  title     = {Principles and Applications of Refinement Types},
  journal   = {NATO Science for Peace and Security Series - D: Information and Communication Security},
  year      = {2010},
  volume    = {25},
  number    = {Logics and Languages for Reliability and Security},
  pages     = {73--104},
  issn      = {1874-6268},
  doi       = {10.3233/978-1-60750-100-8-73},
  publisher = {IOS Press},
}

@Article{manna1970properties,
  author    = {Zohar Manna and Amir Pnueli},
  title     = {Formalization of Properties of Functional Programs},
  journal   = {Journal of the {ACM}},
  year      = {1970},
  volume    = {17},
  number    = {3},
  pages     = {555--569},
  month     = {jul},
  doi       = {10.1145/321592.321606},
  publisher = {Association for Computing Machinery ({ACM})},
}

@InCollection{wimmer2018memoization,
  author    = {Simon Wimmer and Shuwei Hu and Tobias Nipkow},
  title     = {Verified Memoization and Dynamic Programming},
  booktitle = {Interactive Theorem Proving},
  publisher = {Springer International Publishing},
  year      = {2018},
  pages     = {579--596},
  doi       = {10.1007/978-3-319-94821-8_34},
}

@article{sternagel2018terms,
  author  = {Christian Sternagel and René Thiemann},
  title   = {First-Order Terms},
  journal = {Archive of Formal Proofs},
  month   = feb,
  year    = 2018,
  note    = {\url{http://isa-afp.org/entries/First_Order_Terms.html},
            Formal proof development},
  ISSN    = {2150-914x},
}

@article{sternagel2010rewriting,
  author  = {Christian Sternagel and René Thiemann},
  title   = {Abstract Rewriting},
  journal = {Archive of Formal Proofs},
  month   = jun,
  year    = 2010,
  note    = {\url{http://isa-afp.org/entries/Abstract-Rewriting.html},
            Formal proof development},
  ISSN    = {2150-914x},
}

@InProceedings{hupel2018compiler,
author="Hupel, Lars
and Nipkow, Tobias",
editor="Ahmed, Amal",
title="A Verified Compiler from Isabelle/HOL to CakeML",
booktitle="Programming Languages and Systems",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="999--1026",
abstract="Many theorem provers can generate functional programs from definitions or proofs. However, this code generation needs to be trusted. Except for the HOL4 system, which has a proof producing code generator for a subset of ML. We go one step further and provide a verified compiler from Isabelle/HOL to CakeML. More precisely we combine a simple proof producing translation of recursion equations in Isabelle/HOL into a deeply embedded term language with a fully verified compilation chain to the target language CakeML.",
isbn="978-3-319-89884-1"
}

@Article{blanchette2017bnf,
  author  = {Jasmin Christian Blanchette and Andrei Popescu and Dmitriy Traytel},
  title   = {Operations on Bounded Natural Functors},
  journal = {Archive of Formal Proofs},
  year    = {2017},
  month   = dec,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/BNF_Operations.html}, Formal proof development},
}

@InCollection{felty1992rewriting,
  author    = {Felty, Amy},
  title     = {A logic programming approach to implementing higher-Order term rewriting},
  booktitle = {Extensions of Logic Programming},
  publisher = {Springer Berlin Heidelberg},
  year      = {1992},
  editor    = {Eriksson, L. -H. and Halln{\"a}s, L. and Schroeder-Heister, P.},
  pages     = {135--161},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-47114-1},
  abstract  = {Term rewriting has proven to be an important technique in theorem proving. In this paper, we illustrate that rewrite systems and strategies for higher-order term rewriting, which includes the usual notion of first-order rewriting, can be naturally specified and implemented in a higher-order logic programming language. We adopt a notion of higherorder rewrite system which uses the simply typed $\lambda$-calculus as the language for expressing rules, with a restriction on the occurrences of free variables on the left hand sides of rules so that matching of terms with rewrite templates is decidable. The logic programming language contains an implementation of the simply-typed lambda calculus including $\Beta$$\eta$-conversion and higher-order unification. In addition, universal quantification in queries and the bodies of clauses is permitted. For higher-order rewriting, we show how these operations implemented at the meta-level provide elegant mechanisms for the object-level operations of descending through terms and matching terms with rewrite templates. We discuss tactic style theorem proving in this environment and illustrate how term rewriting strategies can be expressed as tactic-style search.},
  doi       = {10.1007/BFb0013606},
}

@Unpublished{felty1992conditional,
  author = {Felty, Amy},
  title  = {Higher-Order Conditional Rewriting in the L-lambda Logic Programming Language},
  year   = {1992},
  url    = {http://www.site.uottawa.ca/~afelty/dist/welp92a.pdf},
}

@InProceedings{haftmann2013refinement,
  author    = {Florian Haftmann and Alexander Krauss and Ond\v{r}ej Kun\v{c}ar and Tobias Nipkow},
  title     = {Data Refinement in Isabelle/HOL},
  booktitle = {Interactive Theorem Proving (ITP 2013)},
  year      = {2013},
  editor    = {S. Blazy and C. Paulin-Mohring and D. Pichardie},
  volume    = {7998},
  series    = {Lecture Notes in Computer Science},
  pages     = {100-115},
  publisher = Springer,
}

@InProceedings{peternson1993typeclasses,
  author    = {Peterson, John and Jones, Mark},
  title     = {Implementing Type Classes},
  booktitle = {Proceedings of the ACM SIGPLAN 1993 Conference on Programming Language Design and Implementation},
  year      = {1993},
  series    = {PLDI '93},
  pages     = {227--236},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {155112},
  doi       = {10.1145/155090.155112},
  isbn      = {0-89791-598-4},
  location  = {Albuquerque, New Mexico, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/155090.155112},
}

@PhdThesis{morris2013classes,
  author = {Morris, John Garrett},
  title  = {Type Classes and Instance Chains: A Relational Approach},
  school = {Portland State University},
  year   = {2013},
  url    = {http://homepages.inf.ed.ac.uk/jmorri14/pubs/morris-dissertation.pdf},
}

@InProceedings{augustsson1993overloading,
  author    = {Augustsson, Lennart},
  title     = {Implementing Haskell Overloading},
  booktitle = {Proceedings of the Conference on Functional Programming Languages and Computer Architecture},
  year      = {1993},
  series    = {FPCA '93},
  pages     = {65--73},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {165191},
  doi       = {10.1145/165180.165191},
  isbn      = {0-89791-595-X},
  location  = {Copenhagen, Denmark},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/165180.165191},
}

@InProceedings{chen1992parametric,
  author    = {Chen, Kung and Hudak, Paul and Odersky, Martin},
  title     = {Parametric Type Classes},
  booktitle = {Proceedings of the 1992 ACM Conference on LISP and Functional Programming},
  year      = {1992},
  series    = {LFP '92},
  pages     = {170--181},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {141536},
  doi       = {10.1145/141471.141536},
  isbn      = {0-89791-481-3},
  location  = {San Francisco, California, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/141471.141536},
}

@InProceedings{laemmel2005syb,
  author    = {L\"{a}mmel, Ralf and Jones, Simon Peyton},
  title     = {Scrap Your Boilerplate with Class: Extensible Generic Functions},
  booktitle = {Proceedings of the Tenth ACM SIGPLAN International Conference on Functional Programming},
  year      = {2005},
  series    = {ICFP '05},
  pages     = {204--215},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1086391},
  doi       = {10.1145/1086365.1086391},
  isbn      = {1-59593-064-7},
  keywords  = {extensibility, generic programming, recursive dictionaries, type classes, typecase},
  location  = {Tallinn, Estonia},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/1086365.1086391},
}

@Article{brady2013idris,
  author    = {Brady, Edwin},
  title     = {Idris, a general-purpose dependently typed programming language: Design and implementation},
  journal   = {Journal of Functional Programming},
  year      = {2013},
  volume    = {23},
  number    = {05},
  pages     = {552--593},
  month     = {sep},
  doi       = {10.1017/s095679681300018x},
  publisher = {Cambridge University Press ({CUP})},
}

@InProceedings{oliveira2010typeclasses,
  author    = {Oliveira, Bruno C.d.S. and Moors, Adriaan and Odersky, Martin},
  title     = {Type Classes As Objects and Implicits},
  booktitle = {Proceedings of the ACM International Conference on Object Oriented Programming Systems Languages and Applications},
  year      = {2010},
  series    = {OOPSLA '10},
  pages     = {341--360},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1869489},
  doi       = {10.1145/1869459.1869489},
  isbn      = {978-1-4503-0203-6},
  keywords  = {abstract datatypes, c++ concepts, scala, type classes},
  location  = {Reno/Tahoe, Nevada, USA},
  numpages  = {20},
  url       = {http://doi.acm.org/10.1145/1869459.1869489},
}

@InProceedings{hurd2011opentheory,
  author    = {Hurd, Joe},
  title     = {The OpenTheory Standard Theory Library},
  booktitle = {NASA Formal Methods},
  year      = {2011},
  editor    = {Bobaru, Mihaela and Havelund, Klaus and Holzmann, Gerard J. and Joshi, Rajeev},
  pages     = {177--191},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Interactive theorem proving is tackling ever larger formalization and verification projects, and there is a critical need for theory engineering techniques to support these efforts. One such technique is cross-prover package management, which has the potential to simplify the development of logical theories and effectively share theories between different theorem prover implementations. The OpenTheory project has developed standards for packaging theories of the higher order logic implemented by the HOL family of theorem provers. What is currently missing is a standard theory library that can serve as a published contract of interoperability and contain proofs of basic properties that would otherwise appear in many theory packages. The core contribution of this paper is the presentation of a standard theory library for higher order logic represented as an OpenTheory package. We identify the core theory set of the HOL family of theorem provers, and describe the process of instrumenting the HOL Light theorem prover to extract a standardized version of its core theory development. We profile the axioms and theorems of our standard theory library and investigate the performance cost of separating the standard theory library into coherent hierarchical theory packages.},
  isbn      = {978-3-642-20398-5},
}

@Unpublished{hupel2018dict,
  author = {Hupel, Lars},
  title  = {Certifying Dictionary Construction in Isabelle/HOL},
  note   = {Preprint},
  year   = {2018},
  url    = {https://lars.hupel.info/pub/dict.pdf},
}

@InProceedings{wadler1989adhoc,
  author    = {Wadler, Philip and Blott, Steven},
  title     = {How to Make Ad-hoc Polymorphism Less Ad Hoc},
  booktitle = {Proceedings of the 16th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year      = {1989},
  series    = {POPL '89},
  pages     = {60--76},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {75283},
  doi       = {10.1145/75277.75283},
  isbn      = {0-89791-294-2},
  location  = {Austin, Texas, USA},
  numpages  = {17},
  url       = {http://doi.acm.org/10.1145/75277.75283},
}

@InCollection{bird1998nested,
  author =    {Bird, Richard and Meertens, Lambert},
  title =     {Nested datatypes},
  booktitle = {Mathematics of Program Construction},
  publisher = {Springer Berlin Heidelberg},
  year =      {1998},
  editor =    {Jeuring, Johan},
  volume =    {1422},
  series =    {Lecture Notes in Computer Science},
  pages =     {52--67},
  doi =       {10.1007/BFb0054285},
  isbn =      {978-3-540-64591-7},
  language =  {English}
}

@InCollection{blanchette2010nitpick,
  author =    {Blanchette, Jasmin Christian and Nipkow, Tobias},
  title =     {{Nitpick}: A Counterexample Generator for Higher-Order Logic Based on a Relational Model Finder},
  booktitle = {Interactive Theorem Proving},
  publisher = {Springer},
  year =      {2010},
  editor =    {Kaufmann, Matt and Paulson, Lawrence C.},
  volume =    {6172},
  series =    {Lecture Notes in Computer Science},
  pages =     {131--146},
  doi =       {10.1007/978-3-642-14052-5_11},
  isbn =      {978-3-642-14051-8},
  language =  {English}
}

@InProceedings{blanchette2011automatic,
  Title                    = {Automatic Proof and Disproof in {Isabelle/HOL}},
  Author                   = {Blanchette, Jasmin Christian and Bulwahn, Lukas and Nipkow, Tobias},
  Booktitle                = {Frontiers of Combining Systems},
  Year                     = {2011},
  Pages                    = {12--27},
  Publisher                = {Springer},
  Owner                    = {lars},
  Timestamp                = {2014.02.06}
}


@Misc{breitner2013hlints,
  author =  {Breitner, Joachim and Huffman, Brian and Mitchell, Neil and Sternagel, Christian},
  title =   {Certified {HLints} with {Isabelle/HOLCF-Prelude}},
  month =   jun,
  year =    {2013},
  note =    {{H}askell And Rewriting Techniques ({HART})},
  journal = {ArXiv e-prints}
}

@InCollection{bulwahn2012quickcheck,
  author =    {Bulwahn, Lukas},
  title =     {The New {Quickcheck} for {Isabelle}},
  booktitle = {Certified Programs and Proofs},
  publisher = {Springer Berlin Heidelberg},
  year =      {2012},
  editor =    {Hawblitzel, Chris and Miller, Dale},
  volume =    {7679},
  series =    {Lecture Notes in Computer Science},
  pages =     {92--108},
  doi =       {10.1007/978-3-642-35308-6_10},
  isbn =      {978-3-642-35307-9},
  language =  {English}
}

@InProceedings{haftmann2010haskell,
  author =       {Haftmann, Florian},
  title =        {From higher-order logic to {Haskell}: there and back again},
  booktitle =    {Proceedings of the 2010 ACM SIGPLAN workshop on Partial evaluation and program manipulation},
  year =         {2010},
  pages =        {155--158},
  organization = {ACM}
}

@Misc{haller2012futures,
  Title                    = {Futures and Promises},
  Author                   = {Haller, Philipp and Prokopec, Aleksandar and Miller, Heather and Klang, Viktor and Kuhn, Roland and Jovanovic, Vojin},
  Year                     = {2012},
  Owner                    = {lars},
  Timestamp                = {2013.07.11},
  URL                      = {http://docs.scala-lang.org/overviews/core/futures.html}
}

@Article{hinze2006finger,
  author =    {Hinze, Ralf and Paterson, Ross},
  title =     {Finger trees: a simple general-purpose data structure},
  journal =   {Journal of Functional Programming},
  year =      {2006},
  volume =    {16},
  number =    {02},
  pages =     {197--217},
  publisher = {Cambridge Univ Press}
}

@InProceedings{kuncak2015leon,
  author =    {Viktor Kuncak},
  title =     {Developing Verified Software Using {Leon}},
  booktitle = {{NASA} Formal Methods - 7th International Symposium, {NFM} 2015, Pasadena, CA, USA, April 27-29, 2015, Proceedings},
  year =      {2015},
  pages =     {12--15}
}

@InProceedings{kuncar2015cyclicity,
  author =    {Kun\v{c}ar, Ond\v{r}ej},
  title =     {Correctness of {I}sabelle's Cyclicity Checker: Implementability of Overloading in Proof Assistants},
  booktitle = {Proceedings of the 2015 Conference on Certified Programs and Proofs},
  year =      {2015},
  series =    {CPP '15},
  pages =     {85--94},
  address =   {New York, NY, USA},
  publisher = {ACM},
  acmid =     {2693175},
  doi =       {10.1145/2676724.2693175},
  isbn =      {978-1-4503-3296-5},
  keywords =  {cyclicity checker, higher-order logic, interactive theorem proving, isabelle, overloaded constant definition, overloading, termination},
  location =  {Mumbai, India},
  numpages =  {10}
}

@InProceedings{matthews2010efficient,
  author =       {Matthews, David CJ and Wenzel, Makarius},
  title =        {Efficient parallel programming in {Poly/ML} and {Isabelle/ML}},
  booktitle =    {Proceedings of the 5th ACM SIGPLAN workshop on Declarative aspects of multicore programming},
  year =         {2010},
  pages =        {53--62},
  organization = {ACM},
  owner =        {lars},
  timestamp =    {2013.07.11}
}

@Article{nordhoff2010finger,
  author =  {Nordhoff, Benedikt and Körner, Stefan and Lammich, Pet},
  title =   {Finger Trees},
  journal = {Archive of Formal Proofs},
  year =    {2010},
  month =   oct,
  note =    {\url{https://isa-afp.org/entries/Finger-Trees.shtml}, Formal proof development},
  issn =    {2150-914x}
}

@Article{felgenhauer2016z,
  author  = {Bertram Felgenhauer and Julian Nagele and Vincent van Oostrom and Christian Sternagel},
  title   = {The Z Property},
  journal = {Archive of Formal Proofs},
  year    = {2016},
  month   = jun,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Rewriting_Z.html}, Formal proof development},
}

@Article{dehornoy2008z,
  author  = {Dehornoy, P and van Oostrom, V},
  title   = {Z, proving confluence by monotonic single-step upperbound functions},
  journal = {Logical Models of Reasoning and Computation (LMRC-08)},
  year    = {2008},
  url     = {https://mitpress.mit.edu/books/proof-language-and-interaction},
}

@Article{church1936conversion,
  author    = {Alonzo Church and J. B. Rosser},
  title     = {Some properties of conversion},
  journal   = {Transactions of the American Mathematical Society},
  year      = {1936},
  volume    = {39},
  number    = {3},
  pages     = {472--472},
  month     = {mar},
  doi       = {10.1090/s0002-9947-1936-1501858-0},
  publisher = {American Mathematical Society ({AMS})},
}

@TechReport{paulson1990isabelle,
  author      = {Paulson, Lawrence C},
  title       = {Isabelle: The Next 700 Theorem Provers},
  institution = {Computer Laboratory, University of Cambridge},
  year        = {1990},
  url         = {https://www.cl.cam.ac.uk/~lp15/papers/Isabelle/chap700.pdf},
}

@Book{gordon1993hol,
  title     = {Introduction to HOL: A Theorem Proving Environment for Higher Order Logic},
  publisher = {Cambridge University Press},
  year      = {1993},
  editor    = {Gordon, M. J. C. and Melham, T. F.},
  address   = {New York, NY, USA},
  isbn      = {0-521-44189-7},
}

@Article{paulson1999generic,
  author  = {Paulson, Lawrence C},
  title   = {A generic tableau prover and its integration with Isabelle},
  journal = {Journal of Universal Computer Science},
  year    = {1999},
  volume  = {5},
  number  = {3},
  pages   = {73--87},
}

@PhdThesis{wenzel2002isar,
  author = {Wenzel, Makarius},
  title  = {Isabelle/Isar --- a versatile environment for human-readable formal proof documents},
  school = {Technische Universität München},
  year   = {2002},
  url    = {https://mediatum.ub.tum.de/doc/601724/601724.pdf},
}

@Article{hudak1989conception,
  author     = {Hudak, Paul},
  title      = {Conception, Evolution, and Application of Functional Programming Languages},
  journal    = {ACM Comput. Surv.},
  year       = {1989},
  volume     = {21},
  number     = {3},
  pages      = {359--411},
  month      = sep,
  issn       = {0360-0300},
  acmid      = {72554},
  address    = {New York, NY, USA},
  doi        = {10.1145/72551.72554},
  issue_date = {Sep. 1989},
  numpages   = {53},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/72551.72554},
}

@Article{hupel2018cakeml,
  author  = {Lars Hupel and Yu Zhang},
  title   = {CakeML},
  journal = {Archive of Formal Proofs},
  year    = {2018},
  month   = mar,
  issn    = {2150-914x},
  note    = {\url{http://devel.isa-afp.org/entries/CakeML.html}, Formal proof development},
}

@Article{kuncar2018consistent,
  author   = {Kun{\v{c}}ar, Ond{\v{r}}ej and Popescu, Andrei},
  title    = {A Consistent Foundation for Isabelle/HOL},
  journal  = {Journal of Automated Reasoning},
  year     = {2018},
  month    = {Jan},
  issn     = {1573-0670},
  abstract = {The interactive theorem prover Isabelle/HOL is based on the well understood higher-order logic (HOL), which is widely believed to be consistent (and provably consistent in set theory by a standard semantic argument). However, Isabelle/HOL brings its own personal touch to HOL: overloaded constant definitions, used to provide the users with Haskell-like type classes. These features are a delight for the users, but unfortunately are not easy to get right as an extension of HOL---they have a history of inconsistent behavior. It has been an open question under which criteria overloaded constant definitions and type definitions can be combined together while still guaranteeing consistency. This paper presents a solution to this problem: non-overlapping definitions and termination of the definition-dependency relation (tracked not only through constants but also through types) ensures relative consistency of Isabelle/HOL.},
  day      = {27},
  doi      = {10.1007/s10817-018-9454-8},
  url      = {https://doi.org/10.1007/s10817-018-9454-8},
}

@Article{kuncar2018types,
  author   = {Kun{\v{c}}ar, Ond{\v{r}}ej and Popescu, Andrei},
  title    = {From Types to Sets by Local Type Definition in Higher-Order Logic},
  journal  = {Journal of Automated Reasoning},
  year     = {2018},
  month    = {Jun},
  issn     = {1573-0670},
  abstract = {Types in higher-order logic (HOL) are naturally interpreted as nonempty sets. This intuition is reflected in the type definition rule for the HOL-based systems (including Isabelle/HOL), where a new type can be defined whenever a nonempty set is exhibited. However, in HOL this definition mechanism cannot be applied inside proof contexts. We propose a more expressive type definition rule that addresses the limitation and we prove its consistency. This higher expressive power opens the opportunity for a HOL tool that relativizes type-based statements to more flexible set-based variants in a principled way. We also address particularities of Isabelle/HOL and show how to perform the relativization in the presence of type classes.},
  day      = {04},
  doi      = {10.1007/s10817-018-9464-6},
  url      = {https://doi.org/10.1007/s10817-018-9464-6},
}

@Article{avigad2018milestones,
  author  = {Avigad, Jeremy and Blanchette, Jasmin Christian and Klein, Gerwin and Paulson, Lawrence and Popescu, Andrei and Snelting, Gregor},
  title   = {Introduction to Milestones in Interactive Theorem Proving},
  journal = {Journal of Automated Reasoning},
  year    = {2018},
  volume  = {61},
  number  = {1},
  pages   = {1--8},
  month   = {Jun},
  issn    = {1573-0670},
  day     = {01},
  doi     = {10.1007/s10817-018-9465-5},
  url     = {https://doi.org/10.1007/s10817-018-9465-5},
}

@Article{kumar2016self,
  author   = {Kumar, Ramana and Arthan, Rob and Myreen, Magnus O. and Owens, Scott},
  title    = {Self-Formalisation of Higher-Order Logic},
  journal  = {Journal of Automated Reasoning},
  year     = {2016},
  volume   = {56},
  number   = {3},
  pages    = {221--259},
  month    = {Mar},
  issn     = {1573-0670},
  abstract = {We present a mechanised semantics for higher-order logic (HOL), and a proof of soundness for the inference system, including the rules for making definitions, implemented by the kernel of the HOL Light theorem prover. Our work extends Harrison's verification of the inference system without definitions. Soundness of the logic extends to soundness of a theorem prover, because we also show that a synthesised implementation of the kernel in CakeML refines the inference system. Apart from adding support for definitions and synthesising an implementation, we improve on Harrison's work by making our model of HOL parametric on the universe of sets, and we prove soundness for an improved principle of constant specification in the hope of encouraging its adoption. Our semantics supports defined constants directly via a context, and we find this approach cleaner than our previous work formalising Wiedijk's Stateless HOL.},
  day      = {01},
  doi      = {10.1007/s10817-015-9357-x},
  url      = {https://doi.org/10.1007/s10817-015-9357-x},
}

@TechReport{kumar2016phd,
  author      = {Kumar, Ramana},
  title       = {{Self-compilation and self-verification}},
  institution = {University of Cambridge, Computer Laboratory},
  year        = {2016},
  number      = {UCAM-CL-TR-879},
  month       = feb,
  url         = {https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-879.pdf},
}

@Book{plotkin2000milner,
  title     = {Proof, Language, and Interaction: Essays in Honour of Robin Milner (Foundations of Computing)},
  publisher = {The MIT Press},
  year      = {2000},
  editor    = {Plotkin, Gordon and Stirling, Colin and Tofte, Mads},
  isbn      = {9780262161886},
}

@Book{winskel1993semantics,
  title     = {The Formal Semantics of Programming Languages: An Introduction},
  publisher = {MIT Press},
  year      = {1993},
  author    = {Winskel, Glynn},
  isbn      = {9780262231695},
  date      = {1993-02-11},
  ean       = {9780262731034},
  pagetotal = {384},
  url       = {https://mitpress.mit.edu/books/formal-semantics-programming-languages},
}

@InProceedings{spector2018haskell,
  author    = {Spector-Zabusky, Antal and Breitner, Joachim and Rizkallah, Christine and Weirich, Stephanie},
  title     = {Total Haskell is Reasonable Coq},
  booktitle = {Proceedings of the 7th ACM SIGPLAN International Conference on Certified Programs and Proofs},
  year      = {2018},
  series    = {CPP 2018},
  pages     = {14--27},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {3167092},
  doi       = {10.1145/3167092},
  isbn      = {978-1-4503-5586-5},
  keywords  = {Coq, Haskell, verification},
  location  = {Los Angeles, CA, USA},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/3167092},
}

@Article{blanchette2016lambda,
  author  = {Jasmin Christian Blanchette and Uwe Waldmann and Daniel Wand},
  title   = {Formalization of Recursive Path Orders for Lambda-Free Higher-Order Terms},
  journal = {Archive of Formal Proofs},
  year    = {2016},
  month   = sep,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Lambda_Free_RPOs.html}, Formal proof development},
}

@Article{becker2016lambda,
  author  = {Heiko Becker and Jasmin Christian Blanchette and Uwe Waldmann and Daniel Wand},
  title   = {Formalization of Knuth–Bendix Orders for Lambda-Free Higher-Order Terms},
  journal = {Archive of Formal Proofs},
  year    = {2016},
  month   = nov,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Lambda_Free_KBOs.html}, Formal proof development},
}

@InProceedings{huffman2013lifting,
  author    = {Huffman, Brian and Kun{\v{c}}ar, Ond{\v{r}}ej},
  title     = {Lifting and Transfer: A Modular Design for Quotients in Isabelle/HOL},
  booktitle = {Certified Programs and Proofs},
  year      = {2013},
  editor    = {Gonthier, Georges and Norrish, Michael},
  pages     = {131--146},
  address   = {Cham},
  publisher = {Springer International Publishing},
  abstract  = {Quotients, subtypes, and other forms of type abstraction are ubiquitous in formal reasoning with higher-order logic. Typically, users want to build a library of operations and theorems about an abstract type, but they want to write definitions and proofs in terms of a more concrete representation type, or ``raw'' type. Earlier work on the Isabelle Quotient package has yielded great progress in automation, but it still has many technical limitations.},
  isbn      = {978-3-319-03545-1},
}

@InProceedings{cheng1991usability,
  author    = {Cheng, J. H. and Jones, C. B.},
  title     = {On the usability of logics which handle partial functions},
  booktitle = {3rd Refinement Workshop},
  year      = {1991},
  editor    = {Morgan, C. and Woodcock, J. C. P.},
  pages     = {51--69},
  publisher = {Springer-Verlag},
}

@InCollection{sep2017quotation,
  author       = {Cappelen, Herman and Lepore, Ernest},
  title        = {Quotation},
  booktitle    = {The Stanford Encyclopedia of Philosophy},
  publisher    = {Metaphysics Research Lab, Stanford University},
  year         = {2017},
  editor       = {Edward N. Zalta},
  edition      = {Fall 2017},
  howpublished = {\url{https://plato.stanford.edu/archives/fall2017/entries/quotation/}},
}

@Book{quine1960word,
  title     = {Word and Object},
  publisher = {MIT University Press Group Ltd},
  year      = {1960},
  author    = {Quine, Willard Van Orman},
  isbn      = {0262670011},
  date      = {1960-01-11},
  ean       = {9780262670012},
  url       = {https://www.ebook.de/de/product/3238067/willard_van_orman_quine_word_and_object.html},
}

@Book{sangiorgi2011coinduction,
  title     = {Introduction to Bisimulation and Coinduction},
  publisher = {Cambridge University Press},
  year      = {2011},
  author    = {Sangiorgi, Davide},
  doi       = {10.1017/CBO9780511777110},
  place     = {Cambridge},
}

@InProceedings{gordon1995coinduction,
  author    = {Gordon, Andrew D.},
  title     = {A Tutorial on Co-induction and Functional Programming},
  booktitle = {Functional Programming, Glasgow 1994},
  year      = {1995},
  editor    = {Hammond, Kevin and Turner, David N. and Sansom, Patrick M.},
  pages     = {78--95},
  address   = {London},
  publisher = {Springer London},
  abstract  = {Co-induction is an important tool for reasoning about unbounded structures. This tutorial explains the foundations of co-induction, and shows how it justifies intuitive arguments about lazy streams, of central importance to lazy functional programmers. We explain from first principles a theory based on a new formulation of bisimilarity for functional programs, which coincides exactly with Morris-style contextual equivalence. We show how to prove properties of lazy streams by co-induction and derive Bird and Wadler's Take Lemma, a well-known proof technique for lazy streams.},
  isbn      = {978-1-4471-3573-9},
}

@InCollection{sozeau2008classes,
  author    = {Matthieu Sozeau and Nicolas Oury},
  title     = {First-Class Type Classes},
  booktitle = {Lecture Notes in Computer Science},
  publisher = {Springer Berlin Heidelberg},
  year      = {2008},
  pages     = {278--293},
  doi       = {10.1007/978-3-540-71067-7_23},
}

@Article{meng2007translating,
  author    = {Jia Meng and Lawrence C. Paulson},
  title     = {Translating Higher-Order Clauses to First-Order Clauses},
  journal   = {Journal of Automated Reasoning},
  year      = {2007},
  volume    = {40},
  number    = {1},
  pages     = {35--60},
  month     = {sep},
  doi       = {10.1007/s10817-007-9085-y},
  publisher = {Springer Nature},
}

@PhdThesis{blanchette2012automatic,
  author  = {Blanchette, Jasmin Christian},
  title   = {Automatic Proofs and Refutations for Higher-Order Logic},
  school  = {Technische Universität München},
  year    = {2012},
  type    = {Dissertation},
  address = {München},
}

@Article{kumar2018clocked,
  author        = {Ramana Kumar and Magnus O. Myreen},
  title         = {Clocked Definitions in {HOL}},
  journal       = {CoRR},
  year          = {2018},
  volume        = {abs/1803.03417},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, https://dblp.org},
  biburl        = {https://dblp.org/rec/bib/journals/corr/abs-1803-03417},
  eprint        = {1803.03417},
  timestamp     = {Mon, 13 Aug 2018 16:47:59 +0200},
  url           = {http://arxiv.org/abs/1803.03417},
}

@InProceedings{berghofer1999inductive,
  author    = {Berghofer, Stefan and Wenzel, Markus},
  title     = {Inductive Datatypes in HOL --- Lessons Learned in Formal-Logic Engineering},
  booktitle = {Theorem Proving in Higher Order Logics},
  year      = {1999},
  editor    = {Bertot, Yves and Dowek, Gilles and Th{\'e}ry, Laurent and Hirschowitz, Andr{\'e} and Paulin, Christine},
  pages     = {19--36},
  address   = {Berlin, Heidelberg},
  publisher = {Springer Berlin Heidelberg},
  abstract  = {Isabelle/HOL has recently acquired new versions of definitional packages for inductive datatypes and primitive recursive functions. In contrast to its predecessors and most other implementations, Isabelle/HOL datatypes may be mutually and indirect recursive, even infinitely branching. We also support inverted datatype definitions for characterizing existing types as being inductive ones later. All our constructions are fully definitional according to established HOL tradition. Stepping back from the logical details, we also see this work as a typical example of what could be called ``Formal-Logic Engineering''. We observe that building realistic theorem proving environments involves further issues rather than pure logic only.},
  isbn      = {978-3-540-48256-7},
}

@InCollection{biendarra2017foundational,
  author    = {Julian Biendarra and Jasmin Christian Blanchette and Aymeric Bouzy and Martin Desharnais and Mathias Fleury and Johannes Hölzl and Ond{\v{r}}ej Kun{\v{c}}ar and Andreas Lochbihler and Fabian Meier and Lorenz Panny and Andrei Popescu and Christian Sternagel and Ren{\'{e}} Thiemann and Dmitriy Traytel},
  title     = {Foundational (Co)datatypes and (Co)recursion for Higher-Order Logic},
  booktitle = {Frontiers of Combining Systems},
  publisher = {Springer International Publishing},
  year      = {2017},
  pages     = {3--21},
  doi       = {10.1007/978-3-319-66167-4_1},
}

@Article{hupel2019algebra,
  author  = {Lars Hupel},
  title   = {An Algebra for Higher-Order Terms},
  journal = {Archive of Formal Proofs},
  year    = {2019},
  month   = jan,
  issn    = {2150-914x},
  note    = {\url{http://isa-afp.org/entries/Higher_Order_Terms.html}, Formal proof development},
}

@InProceedings{botlan2003mlf,
  author    = {Le Botlan, Didier and R{\'e}my, Didier},
  title     = {MLF: Raising ML to the Power of System F},
  booktitle = {Proceedings of the Eighth ACM SIGPLAN International Conference on Functional Programming},
  year      = {2003},
  series    = {ICFP '03},
  pages     = {27--38},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {944709},
  doi       = {10.1145/944705.944709},
  isbn      = {1-58113-756-7},
  keywords  = {ML, first-class polymorphism, second-order polymorphism, system F, type annotations, type inference},
  location  = {Uppsala, Sweden},
  numpages  = {12},
  url       = {http://doi.acm.org.eaccess.ub.tum.de/10.1145/944705.944709},
}

@Manual{haftmann2018code,
  title  = {Code generation from Isabelle/HOL theories},
  author = {Florian Haftmann},
  url    = {https://isabelle.in.tum.de/dist/Isabelle2018/doc/codegen.pdf},
}

@Comment{jabref-meta: databaseType:bibtex;}
